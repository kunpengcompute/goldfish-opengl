// Generated Code - DO NOT EDIT !!
// generated by 'emugen'


#include <string.h>
#include "renderControl_client_context.h"


#include <stdio.h>

int renderControl_client_context_t::initDispatchByName(void *(*getProc)(const char *, void *userData), void *userData)
{
    rcGetRendererVersion = (rcGetRendererVersion_client_proc_t)getProc("GetRendererVersion", userData);
    rcGetEGLVersion = (rcGetEGLVersion_client_proc_t)getProc("GetEGLVersion", userData);
    rcQueryEGLString = (rcQueryEGLString_client_proc_t)getProc("QueryEGLString", userData);
    rcGetGLString = (rcGetGLString_client_proc_t)getProc("GetGLString", userData);
    rcGetNumConfigs = (rcGetNumConfigs_client_proc_t)getProc("GetNumConfigs", userData);
    rcGetConfigs = (rcGetConfigs_client_proc_t)getProc("GetConfigs", userData);
    rcChooseConfig = (rcChooseConfig_client_proc_t)getProc("ChooseConfig", userData);
    rcGetFBParam = (rcGetFBParam_client_proc_t)getProc("GetFBParam", userData);
    rcCreateContext = (rcCreateContext_client_proc_t)getProc("CreateContext", userData);
    rcDestroyContext = (rcDestroyContext_client_proc_t)getProc("DestroyContext", userData);
    rcCreateWindowSurface = (rcCreateWindowSurface_client_proc_t)getProc("CreateWindowSurface", userData);
    rcDestroyWindowSurface = (rcDestroyWindowSurface_client_proc_t)getProc("DestroyWindowSurface", userData);
    rcCreateColorBuffer = (rcCreateColorBuffer_client_proc_t)getProc("CreateColorBuffer", userData);
    rcOpenColorBuffer = (rcOpenColorBuffer_client_proc_t)getProc("OpenColorBuffer", userData);
    rcCloseColorBuffer = (rcCloseColorBuffer_client_proc_t)getProc("CloseColorBuffer", userData);
    rcSetWindowColorBuffer = (rcSetWindowColorBuffer_client_proc_t)getProc("SetWindowColorBuffer", userData);
    rcFlushWindowColorBuffer = (rcFlushWindowColorBuffer_client_proc_t)getProc("FlushWindowColorBuffer", userData);
    rcMakeCurrent = (rcMakeCurrent_client_proc_t)getProc("MakeCurrent", userData);
    rcFBPost = (rcFBPost_client_proc_t)getProc("FBPost", userData);
    rcFBSetSwapInterval = (rcFBSetSwapInterval_client_proc_t)getProc("FBSetSwapInterval", userData);
    rcBindTexture = (rcBindTexture_client_proc_t)getProc("BindTexture", userData);
    rcBindRenderbuffer = (rcBindRenderbuffer_client_proc_t)getProc("BindRenderbuffer", userData);
    rcColorBufferCacheFlush = (rcColorBufferCacheFlush_client_proc_t)getProc("ColorBufferCacheFlush", userData);
    rcReadColorBuffer = (rcReadColorBuffer_client_proc_t)getProc("ReadColorBuffer", userData);
    rcUpdateColorBuffer = (rcUpdateColorBuffer_client_proc_t)getProc("UpdateColorBuffer", userData);
    rcOpenColorBuffer2 = (rcOpenColorBuffer2_client_proc_t)getProc("OpenColorBuffer2", userData);
    rcCreateClientImage = (rcCreateClientImage_client_proc_t)getProc("CreateClientImage", userData);
    rcDestroyClientImage = (rcDestroyClientImage_client_proc_t)getProc("DestroyClientImage", userData);
    rcSelectChecksumHelper = (rcSelectChecksumHelper_client_proc_t)getProc("SelectChecksumHelper", userData);
    rcCreateSyncKHR = (rcCreateSyncKHR_client_proc_t)getProc("CreateSyncKHR", userData);
    rcClientWaitSyncKHR = (rcClientWaitSyncKHR_client_proc_t)getProc("ClientWaitSyncKHR", userData);
    rcFlushWindowColorBufferAsync =
        (rcFlushWindowColorBufferAsync_client_proc_t)getProc("FlushWindowColorBufferAsync", userData);
    rcDestroySyncKHR = (rcDestroySyncKHR_client_proc_t)getProc("DestroySyncKHR", userData);
    rcSetPuid = (rcSetPuid_client_proc_t)getProc("SetPuid", userData);
    rcUpdateColorBufferDMA = (rcUpdateColorBufferDMA_client_proc_t)getProc("UpdateColorBufferDMA", userData);
    rcCreateColorBufferDMA = (rcCreateColorBufferDMA_client_proc_t)getProc("CreateColorBufferDMA", userData);
    rcWaitSyncKHR = (rcWaitSyncKHR_client_proc_t)getProc("WaitSyncKHR", userData);
    return 0;
}
